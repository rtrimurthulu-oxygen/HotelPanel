//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data.MapDataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MapDbContext : DbContext
    {
        public MapDbContext()
            : base("name=MapDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Acc_Airport> Acc_Airport { get; set; }
        public virtual DbSet<AccommodationLocationTmp> AccommodationLocationTmps { get; set; }
        public virtual DbSet<AccommodationLogTable> AccommodationLogTables { get; set; }
        public virtual DbSet<AccommodationproviderXml> AccommodationproviderXmls { get; set; }
        public virtual DbSet<AccommodationTmp> AccommodationTmps { get; set; }
        public virtual DbSet<AccommodationTmp2> AccommodationTmp2 { get; set; }
        public virtual DbSet<AccomodationSupplier2Tmp> AccomodationSupplier2Tmp { get; set; }
        public virtual DbSet<AccomodationSupplierTmp> AccomodationSupplierTmps { get; set; }
        public virtual DbSet<Airport> Airports { get; set; }
        public virtual DbSet<DeActiveAccommodation> DeActiveAccommodations { get; set; }
        public virtual DbSet<LocationHotelsBed> LocationHotelsBeds { get; set; }
        public virtual DbSet<LocationLogTb> LocationLogTbs { get; set; }
        public virtual DbSet<LocationTmp> LocationTmps { get; set; }
        public virtual DbSet<LocationTmp2> LocationTmp2 { get; set; }
        public virtual DbSet<Mgh_Air> Mgh_Air { get; set; }
        public virtual DbSet<TblB> TblBs { get; set; }
        public virtual DbSet<Accommodation> Accommodations { get; set; }
        public virtual DbSet<AccommodationAirport> AccommodationAirports { get; set; }
        public virtual DbSet<AccommodationDiff> AccommodationDiffs { get; set; }
        public virtual DbSet<AccommodationLocation> AccommodationLocations { get; set; }
        public virtual DbSet<AccommodationTmp951109> AccommodationTmp951109 { get; set; }
        public virtual DbSet<AccomodationSupplier> AccomodationSuppliers { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationInfo> LocationInfoes { get; set; }
        public virtual DbSet<AccommodationAlternativeName> AccommodationAlternativeNames { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int usp_SyncAccommodation(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncAccommodation", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncAccommodationAirport(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncAccommodationAirport", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncAccommodationLocation(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncAccommodationLocation", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncAccommodationSupplier(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncAccommodationSupplier", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncData(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncData", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncDeactiveAccommodation(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncDeactiveAccommodation", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncDeactiveAccommodationAirport(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncDeactiveAccommodationAirport", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncDeactiveAccommodationData(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncDeactiveAccommodationData", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncDeactiveAccommodationLocation(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncDeactiveAccommodationLocation", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncDeactiveAccommodationSupplier(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncDeactiveAccommodationSupplier", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncLocation(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncLocation", fromParameter, tOParameter);
        }
    
        public virtual int usp_SyncLocationForDeactiveAccommodation(Nullable<long> from, Nullable<long> tO)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(long));
    
            var tOParameter = tO.HasValue ?
                new ObjectParameter("TO", tO) :
                new ObjectParameter("TO", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SyncLocationForDeactiveAccommodation", fromParameter, tOParameter);
        }
    
        public virtual int usp_TruncateMap3Tables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TruncateMap3Tables");
        }
    }
}
